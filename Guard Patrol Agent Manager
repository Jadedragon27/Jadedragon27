using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class AgentManager : MonoBehaviour
{
    [SerializeField]GameObject[] agents;
    int selectedIndex = -1;
    void Start()
    {
        
    }
    void Update()
    {
        if (Input.GetKeyDown(KeyCode.RightArrow))
        {
            if (selectedIndex >= 0)
                agents[selectedIndex].GetComponent<GuardHighlight>().SetHighlightEnabled(false);

            selectedIndex++;
            if (selectedIndex >= agents.Length)
                selectedIndex = 0;
            Debug.Log("AgentManager selected agent #" + selectedIndex + "" + agents[selectedIndex]);
            agents[selectedIndex].GetComponent<GuardHighlight>().SetHighlightEnabled(true);
        }
        if (Input.GetKeyDown(KeyCode.LeftArrow))
        {
            if (selectedIndex >= 0)
                agents[selectedIndex].GetComponent<GuardHighlight>().SetHighlightEnabled(false);

            selectedIndex--;
            if (selectedIndex >= agents.Length)
                selectedIndex = 0;
            Debug.Log("AgentManager selected agent #" + selectedIndex + "" + agents[selectedIndex]);
            agents[selectedIndex].GetComponent<GuardHighlight>().SetHighlightEnabled(true);
        }

        if (Input.GetKeyDown(KeyCode.Alpha1))
        {
            agents[selectedIndex].GetComponent<NavAgentStateMachine_Best>().Pause();
        }
        

        if (Input.GetKeyDown(KeyCode.Alpha2))
        {
            agents[selectedIndex].GetComponent<NavAgentStateMachine_Best>().pickNextNavPointReverse();
        }

        if (Input.GetKeyDown(KeyCode.Alpha3))
            agents[selectedIndex].GetComponent<NavAgentStateMachine_Best>().Angry();
    }
}
